name: Quality Assurance
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
 
  ###################################### CODECOV ###########################################
  codecov:
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Setup Actions
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java 18
        uses: actions/setup-java@v3
        with:
          java-version: 18
          distribution: adopt


      - name: Run coverage
        run: chmod +x ./gradlew
              && ./gradlew clean test jacocoTestReport

      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)

  ################################# SONAR CLOUD #############################################
  sonarcloud:
    if: "contains(github.event.head_commit.message, 'run sonar')"
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Setup Actions
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: 18
          distribution: adopt

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle


      - name: Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: chmod +x ./gradlew
              && ./gradlew clean test jacocoTestReport sonarqube --stacktrace

  ############################# SNYK ###############################
  snyk:
    if: "contains(github.event.head_commit.message, 'run snyk')"
    name: Security Check
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk16@master
        env:
          SNYK_TOKEN: ${{secrets.SNYK_AUTH}}